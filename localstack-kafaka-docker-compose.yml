services:
  localstack:
    image: localstack/localstack:latest
    hostname: localstack
    container_name: localstack
    environment:
      - SERVICES=s3,sqs,lambda,secretsmanager,kafka
      - STACK_MODE=easy
    volumes:
      - ~/docker/localstack/data:/mnt/data
    ports:
      - "4566:4566" # S3, SQS, Lambda, SecretsManager, Kafka (web UI)
      - "8001:8001" # S3 (REST API)
      - "9002:9002" # SQS (REST API)
      - "8088:8080" # Lambda, SecretsManager, Kafka (Java REST API)
    networks:
      - local_network

  zookeeper:
    depends_on:
      - localstack
    image: confluentinc/cp-zookeeper:latest
    hostname: zookeeper
    container_name: zookeeper
    environment:
      KAFKACLIENTPROTONEW: 0.11
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    volumes:
      - ~/docker/localstack/kafka:/var/lib/zookeeper
    ports:
      - "2181:2181"
    networks:
      - local_network

  kafka:
    depends_on:
      - localstack
      - zookeeper
    image: confluentinc/cp-kafka:latest
    hostname: kafka
    container_name: kafka
    environment:
      - KAFKAS=my-test-cluster
      - KAFKAS_MY_TEST_CLUSTER_BROKERID1=1
      - KAFKAS_MY_TEST_CLUSTER_BOOTSTRAPSERVERS=localhost:9092
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092
      - KAFKAS_OFFSETS_TOPIC_REPLICATION_FACTOR=1
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper
    volumes:
      - ~/docker/localstack/kafka:/mnt/data
    ports:
      - "9092:9092"
    networks:
      - local_network

  postgres:
    image: pgvector/pgvector:pg16  # 官方集成镜像
    container_name: pgvector-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: vectordb
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      # 可选：初始化时自动创建扩展
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - local_network

volumes:
  pgdata:

networks:
  local_network:
    driver: bridge
